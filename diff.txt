diff --git a/TodoPad.xcodeproj/project.pbxproj b/TodoPad.xcodeproj/project.pbxproj
index 6cef848..e4af8bf 100644
--- a/TodoPad.xcodeproj/project.pbxproj
+++ b/TodoPad.xcodeproj/project.pbxproj
@@ -358,6 +358,7 @@
 			isa = PBXGroup;
 			children = (
 				8E7FAFBB289A176700E0CF58 /* TabBarController.swift */,
+				8E8647C528BBEFD60005B691 /* UpdateNeededController.swift */,
 				8E8647C228BBEB9D0005B691 /* API */,
 				8E7FAFB1289A128F00E0CF58 /* Models */,
 				8E7FAFAE289A122B00E0CF58 /* Task Tab */,
@@ -367,7 +368,6 @@
 				8E2B2BC0289CCF3E00DC1D4D /* CoreData */,
 				8E7FAFAF289A123700E0CF58 /* Supporting */,
 				8E2AA0C5289A09A7009F2C53 /* Info.plist */,
-				8E8647C528BBEFD60005B691 /* UpdateNeededController.swift */,
 			);
 			path = TodoPad;
 			sourceTree = "<group>";
@@ -1194,7 +1194,7 @@
 					"$(inherited)",
 					"@executable_path/Frameworks",
 				);
-				MARKETING_VERSION = 1.0;
+				MARKETING_VERSION = 2.0;
 				PRODUCT_BUNDLE_IDENTIFIER = app.todopad.TodoPad;
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SWIFT_EMIT_LOC_STRINGS = YES;
@@ -1223,7 +1223,7 @@
 					"$(inherited)",
 					"@executable_path/Frameworks",
 				);
-				MARKETING_VERSION = 1.0;
+				MARKETING_VERSION = 2.0;
 				PRODUCT_BUNDLE_IDENTIFIER = app.todopad.TodoPad;
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SWIFT_EMIT_LOC_STRINGS = YES;
diff --git a/TodoPad.xcodeproj/project.xcworkspace/xcuserdata/jacoberceg.xcuserdatad/UserInterfaceState.xcuserstate b/TodoPad.xcodeproj/project.xcworkspace/xcuserdata/jacoberceg.xcuserdatad/UserInterfaceState.xcuserstate
index 3ae567f..4d07670 100644
Binary files a/TodoPad.xcodeproj/project.xcworkspace/xcuserdata/jacoberceg.xcuserdatad/UserInterfaceState.xcuserstate and b/TodoPad.xcodeproj/project.xcworkspace/xcuserdata/jacoberceg.xcuserdatad/UserInterfaceState.xcuserstate differ
diff --git a/TodoPad/Helpers/UserDefaultsManager.swift b/TodoPad/Helpers/UserDefaultsManager.swift
index 2409126..531cf7c 100644
--- a/TodoPad/Helpers/UserDefaultsManager.swift
+++ b/TodoPad/Helpers/UserDefaultsManager.swift
@@ -9,17 +9,24 @@ import Foundation
 
 class UserDefaultsManager {
     
-    let statsSortingOptionsIsAscendingKey: String
-    let statsSortingOptionsSortByKey: String
+    private let statsSortingOptionsIsAscendingKey: String
+    private let statsSortingOptionsSortByKey: String
+    
+    private static let appLaunchedCountKey = Constants.appLaunchedCountKey
+    private static let tasksCreatedCountKey = Constants.tasksCreatedCountKey
+    private static let lastAskedForAppReviewKey = Constants.lastAskedForAppReviewKey
+    private static let ratedAppAlreadyKey = Constants.ratedAppAlreadyKey
     
     init(
         _ statsSortingOptionsIsAscendingKey: String = Constants.statsSortingOptionsIsAscendingKey,
         _ statsSortingOptionsSortByKey: String = Constants.statsSortingOptionsSortByKey
+        
     ) {
         self.statsSortingOptionsIsAscendingKey = statsSortingOptionsIsAscendingKey
         self.statsSortingOptionsSortByKey = statsSortingOptionsSortByKey
     }
 
+    // MARK: - StatsController Sorting Options
     func setStatControllerSortingOptions(with statControllerSortOptions: StatsControllerSortingOptions) {
         let defaults = UserDefaults.standard
         defaults.setValue(statControllerSortOptions.isAscending, forKey: statsSortingOptionsIsAscendingKey)
@@ -36,4 +43,33 @@ class UserDefaultsManager {
         
         return StatsControllerSortingOptions(isAscending: isAscending, sortBy: sortBy)
     }
+    
+    // MARK: - Ask For App Rating
+    static func setLastAskedForReviewDate() {
+        UserDefaults.standard.set(Date(), forKey: self.lastAskedForAppReviewKey)
+    }
+    
+    static func getLastAskedForReviewDate() -> Date? {
+        if let lastAskedForReviewDate = UserDefaults.standard.object(forKey: self.lastAskedForAppReviewKey) as? Date {
+            return lastAskedForReviewDate
+        } else {
+            return nil
+        }
+    }
+    
+    
+    static func setRatedAppAlreadyTrue() {
+        UserDefaults.standard.set(true, forKey: self.ratedAppAlreadyKey)
+        
+    }
+    
+    static func getRatedAppAlreadyValue() -> Bool {
+        var ratedAppAlready = false
+        
+        if let ratedAlreadyUserDefaults = UserDefaults.standard.object(forKey: self.ratedAppAlreadyKey) as? Bool {
+            ratedAppAlready = ratedAlreadyUserDefaults
+        }
+        
+        return ratedAppAlready
+    }
 }
diff --git a/TodoPad/Supporting/Constants.swift b/TodoPad/Supporting/Constants.swift
index d48c1e4..a7a5397 100644
--- a/TodoPad/Supporting/Constants.swift
+++ b/TodoPad/Supporting/Constants.swift
@@ -34,6 +34,11 @@ class Constants {
     static let statsSortingOptionsIsAscendingKeyTesting = statsSortingOptionsIsAscendingKey + "_testing"
     static let statsSortingOptionsSortByKeyTesting = statsSortingOptionsSortByKey + "_testing"
     
+    static let appLaunchedCountKey = "opened_app_count"
+    static let tasksCreatedCountKey = "tasks_created_count"
+    static let lastAskedForAppReviewKey = "last_asked_for_app_review"
+    static let ratedAppAlreadyKey = "rated_app_already"
+    
     // MARK: - Website
     static let scheme = "https"
     static let baseURL = "todopad.app"
@@ -47,6 +52,7 @@ class Constants {
     // MARK: - App Store Link
     static let appStore = "https://apps.apple.com/us/app/todopad/id1642068489"
     static let appStoreReview = "https://apps.apple.com/us/app/todopad/id1642068489?action=write-review"
+
     
     // MARK: - Support Emails
     static let adminEmail = "TodoPadApp@gmail.com"
diff --git a/TodoPad/Supporting/SceneDelegate.swift b/TodoPad/Supporting/SceneDelegate.swift
index 8171c44..7f9e492 100644
--- a/TodoPad/Supporting/SceneDelegate.swift
+++ b/TodoPad/Supporting/SceneDelegate.swift
@@ -74,7 +74,7 @@ class SceneDelegate: UIResponder, UIWindowSceneDelegate {
                             }
                         }
                     }
-                case .failure(_): break
+                case .failure(let error): devPrint(error)
                 }
             }
         }
diff --git a/TodoPad/TabBarController.swift b/TodoPad/TabBarController.swift
index ffc66ca..c7570d8 100644
--- a/TodoPad/TabBarController.swift
+++ b/TodoPad/TabBarController.swift
@@ -56,6 +56,8 @@ class TabBarController: UITabBarController, TasksControllerDelegate {
         if animationInProg != true {
             self.doAnimation()
         }
+        
+        self.askToRateAppOnAppStore(taskCompletedCount: taskCount)
     }
     
     private func doAnimation()  {
@@ -95,6 +97,26 @@ class TabBarController: UITabBarController, TasksControllerDelegate {
             }
         }
     }
+    
+    private func askToRateAppOnAppStore(taskCompletedCount: Int) {
+        let alreadyRated = UserDefaultsManager.getRatedAppAlreadyValue()
+        let lastAskedForRatingDate = UserDefaultsManager.getLastAskedForReviewDate()
+        
+        guard alreadyRated == false && taskCompletedCount > 12 else { return }
+        
+        // If never asked for rating OR Asked over a month ago but wasn't rated
+        if lastAskedForRatingDate == nil || lastAskedForRatingDate!.addingTimeInterval(60*60*24*31) < Date() {
+            
+             AlertManager.showRateAppAlertPrompt(on: self) { [weak self] showRateApp in
+                 guard let self = self else { return }
+                 UserDefaultsManager.setLastAskedForReviewDate()
+                 
+                 if showRateApp { // User says they like the app
+                     AppReviewRequest.requestReviewIfNeeded(on: self)
+                 }
+             }
+        }
+    }
 }
 
 
diff --git a/TodoPad/Task Tab/SettingsController/AppReviewRequest.swift b/TodoPad/Task Tab/SettingsController/AppReviewRequest.swift
index 94ca846..40db50c 100644
--- a/TodoPad/Task Tab/SettingsController/AppReviewRequest.swift	
+++ b/TodoPad/Task Tab/SettingsController/AppReviewRequest.swift	
@@ -10,17 +10,26 @@ import StoreKit
 
 enum AppReviewRequest {
     
-    static func requestReviewIfNeeded(with vc: UIViewController) {
+    static func requestReviewIfNeeded(on vc: UIViewController) {
         if let scene = UIApplication.shared.connectedScenes.first(where: { $0.activationState == .foregroundActive }) as? UIWindowScene {
             if #available(iOS 14.0, *) {
                 SKStoreReviewController.requestReview(in: scene)
+                UserDefaultsManager.setRatedAppAlreadyTrue()
             } else {
-                guard let writeReviewURL = URL(string: Constants.appStoreReview) else {
-                    AlertManager.showCannotRateAppAlert(on: vc)
-                    return
-                }
-                UIApplication.shared.open(writeReviewURL, options: [:], completionHandler: nil)
+                self.manuallyRequestReviewIfNeeded(on: vc)
             }
         }
     }
+    
+    static func manuallyRequestReviewIfNeeded(on vc: UIViewController) {
+        guard let writeReviewURL = URL(string: Constants.appStoreReview) else {
+            AlertManager.showCannotRateAppAlert(on: vc)
+            return
+        }
+        UserDefaultsManager.setRatedAppAlreadyTrue()
+        
+        DispatchQueue.main.asyncAfter(deadline: .now()+0.5) {
+            UIApplication.shared.open(writeReviewURL, options: [:], completionHandler: nil)
+        }
+    }
 }
diff --git a/TodoPad/Task Tab/SettingsController/SettingsController.swift b/TodoPad/Task Tab/SettingsController/SettingsController.swift
index 4e53731..cb57a32 100644
--- a/TodoPad/Task Tab/SettingsController/SettingsController.swift	
+++ b/TodoPad/Task Tab/SettingsController/SettingsController.swift	
@@ -22,7 +22,7 @@ class SettingsController: UIViewController {
                 AlertManager.showRateAppAlertPrompt(on: self) { [weak self] showRateApp in
                     if showRateApp {
                         guard let self = self else { return }
-                        AppReviewRequest.requestReviewIfNeeded(with: self)
+                        AppReviewRequest.manuallyRequestReviewIfNeeded(on: self)
                     } else {
                         let email = Constants.supportEmail
                         let subject = "App Improvment Suggestion"
